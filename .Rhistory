# text_con <- textConnection(table)
# data_table <- read.csv(text_con, sep = "|")
#
# data_table <- data_table |>
#   slice(2:5, 7) |>
#   mutate(`Área` = as.numeric(stringr::str_replace(`Área`, "de Ward", ""))) |>
#   separate(CMO.DMO, c("CMO", "DMO"), " ") |>
#   select(2:7)
#
# data_table[5,1] <- "Triangulo_Ward"
#
# colnames(data_table) <- c("regiao", "area", "CMO", "DMO", "zscore", "AM")
#
# data_table <- data_table %>%
#   mutate(paciente = patientName,
#          data = examDate,
#          varredura = examScan)
#
# data_table
table
}
clean_femur(pdf)
clean_femur <- function(raw) {
patientName <- str_trim(str_extract_all(raw, "(?<=Nome: ).+(?=Sexo)"), side="both")
examDate <- str_extract_all(raw, "(?<=Data da varredura: ).+(?= ID)")
examScan <- str_trim(str_extract_all(raw, "(?<=Tipo de varredura:).+(?=\n)"))
raw <- map(raw, ~ str_split(.x, "\\n") %>% unlist())
raw <- reduce(raw, c)
raw <- str_replace(raw, "Imagem não destinada a diagnóstico", "")
table_start <- stringr::str_which(tolower(raw), "região")
table_end <- stringr::str_which(tolower(raw), "de ward")
table_end <- table_end[min(which(table_end > table_start))]
table <- raw[(table_start):(table_end)]
table <- str_replace_all(table, "\\s{2,}", "|")
text_con <- textConnection(table)
data_table <- read.csv(text_con, sep = "|")
data_table <- data_table |>
slice(2:5, 7) |>
mutate(`Área` = as.numeric(stringr::str_replace(`Área`, "de Ward", ""))) |>
separate(CMO.DMO, c("CMO", "DMO"), " ") |>
select(2:7)
data_table[5,1] <- "Triangulo_Ward"
colnames(data_table) <- c("regiao", "area", "CMO", "DMO", "zscore", "AM")
data_table <- data_table %>%
mutate(paciente = patientName,
data = examDate,
varredura = examScan)
data_table
}
table
paste(table[11], "|", sep="")
table[11]
str_trim(table[11])
table_1[1] <- "|Região|Gordura|MassaMagra|MassaTotal|Gordura_Porcentagem|Percentil|AM"
table_1[2] <- paste(sep="", "|", str_extract(table[3], "(?<= ).+(?=% de gordura corporal total)"))
table_1[3] <- paste(sep="", "|", str_extract(table[4], "(?<= ).+(?=Massa adiposa)"))
table_1[4] <- paste(sep="", "|", str_extract(table[5], "(?<= ).+(?=Taxa androide)"))
table_1[5] <- paste(sep="", "|", str_extract(table[6], "(?<= ).+(?=% gord. tronco)"))
table_1[6] <- paste(sep="", "|", str_extract(table[7], "(?<= ).+(?=Prop. massa gord.)"))
table_1[7] <- paste(sep="", "|", str_extract(table[8], "(?<= ).+(?=Massa de TAV estim)"))
table_1[8] <- paste(sep="", "|", str_extract(table[9], "(?<= ).+(?=Volume de TAV estim)"))
table_1[9] <- paste(sep="", "|", str_extract(table[10], "(?<= ).+(?=Área de TAV estim)"))
table_1[10] <- paste("|", str_trim(table[11]), "|", sep="")
table_1[11] <- paste(sep="", "|",str_extract(table[12], "(?<= ).+(?=Índices de massa magra)"))
table_1 <- str_replace_all(table_1, "\\s{2,}", "|")
data_table_1 <- read.csv(textConnection(table_1), sep = "|")
table_1
read.csv(textConnection(table_1), sep = "|")
textConnection(table_1)
table_1
read.csv(textConnection(table_1), sep = "|", row.names=NULL)
data_table_1 <- read.csv(textConnection(table_1), sep = "|", row.names=NULL)
textConnection(table)
read.csv(text_con, sep = "|")
text_con <- textConnection(table)
read.csv(text_con, sep = "|")
table
data_table_1 <- read.csv(textConnection(table_1), sep = "|", row.names=NULL) |>
slice(2:8)
View(data_table_1)
read.csv(textConnection(table_1), sep = "|", row.names=NULL) |>
slice(2:8)
read.csv(textConnection(table_1), sep = "|", row.names=NULL) |>
select(2:8)
read.csv(textConnection(table_1), sep = "|", row.names=NULL) |>
select(2:8) |>
`colnames<-`(c("Região", "Gordura", "Massa_magra", "Massa_total",
"Porcentagem_gordura", "Percentil", "AM"))
data_table_1 <- read.csv(textConnection(table_1), sep = "|", row.names=NULL) |>
select(2:8) |>
`colnames<-`(c("Região", "Gordura", "Massa_magra", "Massa_total",
"Porcentagem_gordura", "Percentil", "AM"))
table_2 <- matrix()
table
clean_bodycomp_1 <- function(raw) {
patientName <- str_trim(str_extract_all(raw, "(?<=Nome: ).+(?=Sexo)"), side="both")
examDate <- str_extract_all(raw, "(?<=Data da varredura: ).+(?= ID)")
examScan <- str_trim(str_extract_all(raw, "(?<=Tipo de varredura:).+(?=\n)"))
raw <- map(raw, ~ str_split(.x, "\\n") %>% unlist())
raw <- reduce(raw, c)
raw <- str_replace(raw, "Imagem não destinada a diagnóstico", "")
raw <- str_replace(raw, "318 x 150", "")
table_start <- str_which(raw, "Região")
table_end <- str_which(raw, "Total")
table_end <- table_end[min(which(table_end > table_start))]
table <- raw[(table_start):(table_end)]
table <- str_replace_all(table, "\\s{2,}", "|")
# text_con <- textConnection(table)
# data_table <- read.csv(text_con, sep = "|")
#
# data_table <- data_table |>
#   slice(-1) |>
#   `colnames<-`(c("Região", "CMO", "Gordura", "Massa_magra",
#                  "Massa_magra_e_CMO", "Massa_total", "Porcentagem_gordura")) |>
#   mutate(paciente = patientName,
#          data = examDate,
#          varredura = examScan)
#
# data_table
table
}
pdf <- pdf_text("C:\\Users\\Gabriel\\Desktop\\DXAS\\amanda-comp2.pdf")
clean_comp(pdf)
clean_bodycomp_1(pdf)
clean_bodycomp_1 <- function(raw) {
patientName <- str_trim(str_extract_all(raw, "(?<=Nome: ).+(?=Sexo)"), side="both")
examDate <- str_extract_all(raw, "(?<=Data da varredura: ).+(?= ID)")
examScan <- str_trim(str_extract_all(raw, "(?<=Tipo de varredura:).+(?=\n)"))
raw <- map(raw, ~ str_split(.x, "\\n") %>% unlist())
raw <- reduce(raw, c)
raw <- str_replace(raw, "Imagem não destinada a diagnóstico", "")
raw <- str_replace(raw, "318 x 150", "")
table_start <- str_which(raw, "Região")
table_end <- str_which(raw, "Total")
table_end <- table_end[min(which(table_end > table_start))]
table <- raw[(table_start):(table_end)]
table <- str_replace_all(table, "\\s{2,}", "|")
text_con <- textConnection(table)
data_table <- read.csv(text_con, sep = "|")
data_table <- data_table |>
slice(-1) |>
`colnames<-`(c("Região", "CMO", "Gordura", "Massa_magra",
"Massa_magra_e_CMO", "Massa_total", "Porcentagem_gordura")) |>
mutate(paciente = patientName,
data = examDate,
varredura = examScan)
data_table
}
table
str_extract(table[3], "(?= $ de gordura corporal total).+(?=% de gordura corporal total)")
str_extract(table[3], "(?= de gordura corporal total).+(?=% de gordura corporal total)")
table[3]
str_extract(table[3], "(?<= % de)")
str_extract(table[3], "(?= % de)")
tr_match(table[3], "(?= % de)")
str_match(table[3], "(?= % de)")
str_extract(table[3], "(?=de)")
str_extract(table[3], "(?=de).+(?=% ")
str_extract(table[3], "(?=de).+(?=%")
str_extract(table[3], "(?=de).+(?=%  ")
str_extract(table[3], "(?= de).+(?=%  ")
table
str_extract(table[3], "^ de gordura")
str_extract(table[3], "^de gordura")
table[3]
str_extract(table[3], "^gordura"
str_extract(table[3], "^gordura")
str_match(table[3], "^gordura")
str_extract(table[3], "\A gordura")
str_extract(table[3], "(?= gordura")
str_extract(table[3], "(?= gordura)")
str_extract(table[3], "(?! gordura)")
str_extract(table[3], "(?<= gordura)")
table[3]
str_extract(table[3], "(?<=gordura)")
str_extract_all(table[3], "(?<=gordura)")
?str_split
str_split(table[1], "gordura")
str_split(table[3], "gordura")
str_split(table[1], "$ de gordura corpotal")
str_split(table[1], "$ de gordura corporal")
str_split(table[3], "$ de gordura corporal")
str_split(table[3], "$ de gordura corporal")
str_split(table[3], "% de gordura corporal")
str_split(table[3], "% de gordura corporal ")
str_split(table[3], "% de gordura corporal ")[1]
str_split(table[3], "% de gordura corporal ")[,1]
str_split(table[3], "% de gordura corporal ")
str_split_fixed(table[3], "% de gordura corporal ")
str_split_fixed(table[3], "% de gordura corporal ", n=2)
str_split_fixed(table[3], "% de gordura corporal ", n=1)
str_split_fixed(table[3], "% de gordura corporal ", n=2)
str_split_fixed(table[3], "% de gordura corporal ", n=2)[,2]
str_split_fixed(table[3], "% de ", n=2)[,2]
table
table_2 <- matrix()
table_2[1] <- "Indice|Resultado|Percentil_YN|Percentil_AM"
table_2[2] <- str_split_fixed(table[3], "% de ", n=2)[,2]
table_2[3] <- str_split_fixed(table[4], "Massa adiposa/", n=2)[,2]
table_2[4] <- str_split_fixed(table[3], "Taxa ", n=2)[,2]
table_2[5] <- str_split_fixed(table[3], "% gord ", n=2)[,2]
table_2[6] <- str_split_fixed(table[3], "Prop. ", n=2)[,2]
table_2[7] <- str_split_fixed(table[3], "Massa de ", n=2)[,2]
table_2[8] <- str_split_fixed(table[3], "Volume de ", n=2)[,2]
table_2[9] <- str_split_fixed(table[3], "Área de ", n=2)[,2]
table_2
str_split_fixed(table[4], "Massa adiposa/", n=2)[,2]
str_split_fixed(table[3], "Taxa ", n=2)[,2]
table_2 <- matrix()
table_2[1] <- "Indice|Resultado|Percentil_YN|Percentil_AM"
table_2[2] <- str_split_fixed(table[3], "% de ", n=2)[,2]
table_2[3] <- str_split_fixed(table[4], "Massa adiposa/", n=2)[,2]
table_2[4] <- str_split_fixed(table[5], "Taxa ", n=2)[,2]
table_2[5] <- str_split_fixed(table[6], "% gord ", n=2)[,2]
table_2[6] <- str_split_fixed(table[7], "Prop. ", n=2)[,2]
table_2[7] <- str_split_fixed(table[8], "Massa de ", n=2)[,2]
table_2[8] <- str_split_fixed(table[9], "Volume de ", n=2)[,2]
table_2[9] <- str_split_fixed(table[10], "Área de ", n=2)[,2]
table_2
table[6]
table_2 <- matrix()
table_2[1] <- "Indice|Resultado|Percentil_YN|Percentil_AM"
table_2[2] <- str_split_fixed(table[3], "% de ", n=2)[,2]
table_2[3] <- str_split_fixed(table[4], "Massa adiposa/", n=2)[,2]
table_2[4] <- str_split_fixed(table[5], "Taxa ", n=2)[,2]
table_2[5] <- str_split_fixed(table[6], "% gord", n=2)[,2]
table_2[6] <- str_split_fixed(table[7], "Prop.", n=2)[,2]
table_2[7] <- str_split_fixed(table[8], "Massa de ", n=2)[,2]
table_2[8] <- str_split_fixed(table[9], "Volume de ", n=2)[,2]
table_2[9] <- str_split_fixed(table[10], "Área de ", n=2)[,2]
table_2
str_split_fixed(table[3], "% de ", n=2)[,2]
str_split_fixed(table[4], "Massa adiposa/", n=2)[,2]
str_split_fixed(table[5], "Taxa ", n=2)[,2]
str_split_fixed(table[6], "% gord", n=2)[,2]
str_split_fixed(table[7], "Prop.", n=2)[,2]
str_split_fixed(table[8], "Massa de ", n=2)[,2]
table_2
table_2[1]
str_replace_all(table_2, "\\s{2,}", "|")
table_2 <- str_replace_all(table_2, "\\s{2,}", "|")
read.csv(textConnection(table_2), sep = "|", row.names=NULL)
data_table_2 <- read.csv(textConnection(table_2), sep = "|", row.names=NULL)
View(data_table_2)
str_split_fixed(table[3], "% de ", n=2)[,2]
paste("porcentagem de", str_split_fixed(table[3], "% de ", n=2)[,2])
str_split_fixed(table[4], "Massa adiposa/", n=2)[,2]
paste("Área de", str_split_fixed(table[10], "Área de ", n=2)[,2])
table_2 <- matrix()
table_2[1] <- "Indice|Resultado|Percentil_YN|Percentil_AM"
table_2[2] <- paste("porcentagem de", str_split_fixed(table[3], "% de ", n=2)[,2])
table_2[3] <- paste("Massa adiposa/", str_split_fixed(table[4], "Massa adiposa/", n=2)[,2])
table_2[4] <- paste("Taxa", str_split_fixed(table[5], "Taxa ", n=2)[,2])
table_2[5] <- paste("porcentagem de", str_split_fixed(table[6], "% gord", n=2)[,2])
table_2[6] <- paste("Prop.", str_split_fixed(table[7], "Prop.", n=2)[,2])
table_2[7] <- paste("Massa de", str_split_fixed(table[8], "Massa de ", n=2)[,2])
table_2[8] <- paste("Volume de", str_split_fixed(table[9], "Volume de ", n=2)[,2])
table_2[9] <- paste("Área de", str_split_fixed(table[10], "Área de ", n=2)[,2])
table_2 <- str_replace_all(table_2, "\\s{2,}", "|")
data_table_2 <- read.csv(textConnection(table_2), sep = "|", row.names=NULL)
paste("Prop.", str_split_fixed(table[7], "Prop.", n=2)[,2])
paste("Prop", str_split_fixed(table[7], "Prop.", n=2)[,2])
table_2[6] <- paste("Prop", str_split_fixed(table[7], "Prop.", n=2)[,2])
table_2[7] <- paste("Massa de", str_split_fixed(table[8], "Massa de ", n=2)[,2])
table_2[8] <- paste("Volume de", str_split_fixed(table[9], "Volume de ", n=2)[,2])
table_2[9] <- paste("Área de", str_split_fixed(table[10], "Área de ", n=2)[,2])
table_2 <- str_replace_all(table_2, "\\s{2,}", "|")
str_split_fixed(table[7], "Prop.", n=2)[,2]
paste("proporcao", str_split_fixed(table[7], "Prop. ", n=2)[,2])
table_2[6] <- paste("proporcao", str_split_fixed(table[7], "Prop. ", n=2)[,2])
table_2[7] <- paste("Massa de", str_split_fixed(table[8], "Massa de ", n=2)[,2])
table_2[8] <- paste("Volume de", str_split_fixed(table[9], "Volume de ", n=2)[,2])
table_2[9] <- paste("Área de", str_split_fixed(table[10], "Área de ", n=2)[,2])
table_2 <- str_replace_all(table_2, "\\s{2,}", "|")
data_table_2 <- read.csv(textConnection(table_2), sep = "|", row.names=NULL)
paste("Taxa", str_split_fixed(table[5], "Taxa ", n=2)[,2])
paste("porcentagem de", str_split_fixed(table[6], "% gord", n=2)[,2])
str_split_fixed(table[6], "% gord", n=2)[,2]
str_split_fixed(table[6], "% gord .", n=2)[,2])
str_split_fixed(table[6], "% gord .", n=2)[,2]
str_split_fixed(table[6], "% gord", n=2)[,2]
str_split_fixed(table[6], "% gord. ", n=2)[,2]
paste("% gord", str_split_fixed(table[6], "% gord. ", n=2)[,2])
paste("% de", str_split_fixed(table[3], "% de ", n=2)[,2])
paste("prop", str_split_fixed(table[7], "Prop. ", n=2)[,2])
table_2 <- matrix()
table_2[1] <- "Indice|Resultado|Percentil_YN|Percentil_AM"
table_2[2] <- paste("% de", str_split_fixed(table[3], "% de ", n=2)[,2])
table_2[3] <- paste("Massa adiposa/", str_split_fixed(table[4], "Massa adiposa/", n=2)[,2])
table_2[4] <- paste("Taxa", str_split_fixed(table[5], "Taxa ", n=2)[,2])
table_2[5] <- paste("% gord", str_split_fixed(table[6], "% gord. ", n=2)[,2])
table_2[6] <- paste("prop", str_split_fixed(table[7], "Prop. ", n=2)[,2])
table_2[7] <- paste("Massa de", str_split_fixed(table[8], "Massa de ", n=2)[,2])
table_2[8] <- paste("Volume de", str_split_fixed(table[9], "Volume de ", n=2)[,2])
table_2[9] <- paste("Área de", str_split_fixed(table[10], "Área de ", n=2)[,2])
table_2 <- str_replace_all(table_2, "\\s{2,}", "|")
data_table_2 <- read.csv(textConnection(table_2), sep = "|", row.names=NULL)
table
raw <- pdf_text("C:\\Users\\Gabriel\\Desktop\\DXAS\\amanda-comp.pdf")
raw_2 <- map(raw, ~ str_split(.x, "\\n") %>% unlist())
raw_2 <- reduce(raw_2, c)
raw_2 <- str_replace(raw_2, "Imagem não destinada a diagnóstico", "")
raw_2 <- str_replace(raw_2, "318 x 150", "")
table_start_2 <- str_which(raw_2, "Região")
table_end_2 <- str_which(raw_2, "Ginoide")
table_end_2 <- table_end[min(which(table_end_2 > table_start_2))]
raw_2[(table_start_2):(table_end_2)]
table_indexes <- raw_2[(table_start_2):(table_end_2)]
table_indexes <- raw_2[(table_start_2):(table_end_2)]
table_indexes <- str_replace_all(table_indexes, "\\s{2,}", "|")
table_indexes
raw_2 <- map(raw, ~ str_split(.x, "\\n") %>% unlist())
raw_2 <- reduce(raw_2, c)
table_start_2 <- str_which(raw_2, "Índices de massa magra")
table_end_2 <- str_which(raw_2, "Apêndice Massa magra")
table_end_2 <- table_end[min(which(table_end_2 > table_start_2))]
table_indexes <- raw_2[(table_start_2):(table_end_2)]
table_indexes <- str_replace_all(table_indexes, "\\s{2,}", "|")
table_indexes
raw
raw_2
table_start_2 <- str_which(raw_2, "Índices de massa magra")
table_end_2 <- str_which(raw_2, "Operador:")
table_end_2 <- table_end[min(which(table_end_2 > table_start_2))]
table_indexes <- raw_2[(table_start_2):(table_end_2)]
table_indexes <- str_replace_all(table_indexes, "\\s{2,}", "|")
table_indexes
raw_2 <- map(raw, ~ str_split(.x, "\\n") %>% unlist())
raw_2 <- reduce(raw_2, c)
table_start_2 <- str_which(raw_2, "Índices de massa magra")
table_end_2 <- str_which(raw_2, "Operador:")
table_end_2 <- table_end[min(which(table_end_2 > table_start_2))]
raw_2[(table_start_2):(table_end_2)]
raw_2
raw_2 <- map(raw, ~ str_split(.x, "\\n") %>% unlist())
raw_2 <- reduce(raw_2, c)
table_start_2 <- str_which(raw_2, "Índices de massa magra")
table_end_2 <- str_which(raw_2, "TAV estim")
table_end_2 <- table_end[min(which(table_end_2 > table_start_2))]
table_indexes <- raw_2[(table_start_2):(table_end_2)]
table_indexes
table_start_2 <- str_which(raw_2, "Índices")
table_end_2 <- str_which(raw_2, "TAV estim")
table_end_2 <- table_end[min(which(table_end_2 > table_start_2))]
raw_2[(table_start_2):(table_end_2)]
table_start_2 <- str_which(raw_2, "Medir")
table_end_2 <- str_which(raw_2, "TAV estim")
table_end_2 <- table_end[min(which(table_end_2 > table_start_2))]
table_indexes <- raw_2[(table_start_2):(table_end_2)]
raw_2 <- map(raw, ~ str_split(.x, "\\n") %>% unlist())
raw_2 <- reduce(raw_2, c)
table_start_2 <- str_which(raw_2, "Medir")
table_end_2 <- str_which(raw_2, "TAV estim")
table_end_2 <- table_end[min(which(table_end_2 > table_start_2))]
raw_2[(table_start_2):(table_end_2)]
raw_2[(table_start_2):(table_end_2)]
raw_2[(table_start_2):(table_end_2)]
raw_2[(table_start_2):(table_end_2)]
raw_2[(table_start_2):(table_end_2)]
raw_2[(table_start_2):(table_end_2)]
raw_2[(table_start_2):(table_end_2)]
table_start_2
table_end_2
table_indexes <- str_replace_all(table_indexes, "\\s{2,}", "|")
table_indexes
raw_2 <- map(raw, ~ str_split(.x, "\\n") %>% unlist())
raw_2 <- reduce(raw_2, c)
str_which(raw_2, "Região")
str_which(raw_2, "Apêndice Massa magra/altura²")
raw_2
str_which(raw_2, "Operador:")
str_which(raw_2, "Operador:")
table_start_2 <- str_which(raw_2, "Região")
table_end_2 <- str_which(raw_2, "Operador:")
table_end_2 <- table_end[min(which(table_end_2 > table_start_2))]
table_end[min(which(table_end_2 > table_start_2))]
str_which(raw_2, "Operador:")
table_end
table_start_2 <- str_which(raw_2, "Região")
table_end_2 <- str_which(raw_2, "Apêndice Massa magra/altura²")
table_end_2 <- table_end_2[min(which(table_end_2 > table_start_2))]
table_indexes <- raw_2[(table_start_2):(table_end_2)]
table_indexes <- str_replace_all(table_indexes, "\\s{2,}", "|")
table_indexes
raw <- map(raw, ~ str_split(.x, "\\n") %>% unlist())
raw <- reduce(raw, c)
raw <- str_replace(raw, "Imagem não destinada a diagnóstico", "")
raw <- str_replace(raw, "318 x 150", "")
table_start <- str_which(raw, "Região")
table_end <- str_which(raw, "Apêndice Massa magra/altura²")
table_end <- table_end[min(which(table_end > table_start))]
table <- raw[(table_start):(table_end)]
table <- str_replace_all(table, "\\s{2,}", "|")
table
str_trim(str_extract_all(raw, "(?<=Nome: ).+(?=Sexo)"), side="both")
str_extract_all(raw, "(?<=Data da varredura: ).+(?= ID)")
str_trim(str_extract_all(raw, "(?<=Tipo de varredura:).+(?=\n)"))
str_extract_all(raw, "(?<=Nome: ).+(?=Sexo)"), side="both")
str_extract_all(raw, "(?<=Nome: ).+(?=Sexo)")
raw
str_extract(raw, "(?<=Nome: ).+(?=Sexo)")
raw
str_extract_all(raw, "(?<=Data da varredura: ).+(?= ID)")
str_trim(str_extract_all(raw, "(?<=Nome: ).+(?=Sexo)"), side="both")
str_trim(str_extract_all(raw, "(?<=Tipo de varredura:).+(?=\n)"))
table_1 <- matrix()
table_1[1] <- "|Região|Gordura|MassaMagra|MassaTotal|Gordura_Porcentagem|Percentil|AM"
table_1[2] <- paste(sep="", "|", str_extract(table[3], "(?<= ).+(?=% de gordura corporal total)"))
table_1[3] <- paste(sep="", "|", str_extract(table[4], "(?<= ).+(?=Massa adiposa)"))
table_1[4] <- paste(sep="", "|", str_extract(table[5], "(?<= ).+(?=Taxa androide)"))
table_1[5] <- paste(sep="", "|", str_extract(table[6], "(?<= ).+(?=% gord. tronco)"))
table_1[6] <- paste(sep="", "|", str_extract(table[7], "(?<= ).+(?=Prop. massa gord.)"))
table_1[7] <- paste(sep="", "|", str_extract(table[8], "(?<= ).+(?=Massa de TAV estim)"))
table_1[8] <- paste(sep="", "|", str_extract(table[9], "(?<= ).+(?=Volume de TAV estim)"))
table_1[9] <- paste(sep="", "|", str_extract(table[10], "(?<= ).+(?=Área de TAV estim)"))
table_1[10] <- paste("|", str_trim(table[11]), "|", sep="")
table_1[11] <- paste(sep="", "|",str_extract(table[12], "(?<= ).+(?=Índices de massa magra)"))
table_1 <- str_replace_all(table_1, "\\s{2,}", "|")
data_table_1 <- read.csv(textConnection(table_1), sep = "|", row.names=NULL) |>
select(2:8) |>
`colnames<-`(c("Região", "Gordura", "Massa_magra", "Massa_total",
"Porcentagem_gordura", "Percentil_YN", "Percentil_AM"))
table_1
table_1 <- str_replace_all(table_1, "\\s{2,}", "|")
data_table_1 <- read.csv(textConnection(table_1), sep = "|", row.names=NULL) |>
select(2:8) |>
`colnames<-`(c("Região", "Gordura", "Massa_magra", "Massa_total",
"Porcentagem_gordura", "Percentil_YN", "Percentil_AM"))
table_1
data_table_1
table
paste("Massa magra/altura² ", str_split_fixed(table[10], "Massa magra/altura² ", n=2)[,2])
paste("Massa magra/altura² ", str_split_fixed(table[15], "Massa magra/altura² ", n=2)[,2])
paste("Massa magra/altura²", str_split_fixed(table[15], "Massa magra/altura² ", n=2)[,2])
paste("Apêndice Massa magra/altura²", str_split_fixed(table[10], "Apêndice Massa magra/altura² ", n=2)[,2])
paste("Apêndice Massa magra/altura²", str_split_fixed(table[16], "Apêndice Massa magra/altura² ", n=2)[,2])
table_2 <- matrix()
table_2[1] <- "Indice|Resultado|Percentil_YN|Percentil_AM"
table_2[2] <- paste("% de", str_split_fixed(table[3], "% de ", n=2)[,2])
table_2[3] <- paste("Massa adiposa/", str_split_fixed(table[4], "Massa adiposa/", n=2)[,2])
table_2[4] <- paste("Taxa", str_split_fixed(table[5], "Taxa ", n=2)[,2])
table_2[5] <- paste("% gord", str_split_fixed(table[6], "% gord. ", n=2)[,2])
table_2[6] <- paste("prop", str_split_fixed(table[7], "Prop. ", n=2)[,2])
table_2[7] <- paste("Massa de", str_split_fixed(table[8], "Massa de ", n=2)[,2])
table_2[8] <- paste("Volume de", str_split_fixed(table[9], "Volume de ", n=2)[,2])
table_2[9] <- paste("Área de", str_split_fixed(table[10], "Área de ", n=2)[,2])
table_2[10] <- paste("Massa magra/altura²", str_split_fixed(table[15], "Massa magra/altura² ", n=2)[,2])
table_2[11] <- paste("Apêndice Massa magra/altura²", str_split_fixed(table[16], "Apêndice Massa magra/altura² ", n=2)[,2])
table_2 <- str_replace_all(table_2, "\\s{2,}", "|")
data_table_2 <- read.csv(textConnection(table_2), sep = "|", row.names=NULL)
data_table_2
View(data_table_2)
raw <- pdf_text("C:\\Users\\Gabriel\\Desktop\\DXAS\\amanda-femur.pdf")
str_trim(str_extract_all(raw, "(?<=Nome: ).+(?=Sexo)"), side="both")
raw
raw <- pdf_text("C:\\Users\\Gabriel\\Desktop\\DXAS\\amanda-comp2.pdf")
raw
raw <- pdf_text("C:\\Users\\Gabriel\\Desktop\\DXAS\\amanda-comp.pdf")
raw
str_trim(str_extract_all(raw, "(?<=Nome: ).+(?=Sexo)"), side="both")
str_extract_all(raw, "(?<=Data da varredura: ).+(?= ID)")
str_trim(str_extract_all(raw, "(?<=Data da varredura: ).+(?= ID)"))
runApp('navbar-app.r')
runApp('navbar-app.r')
raw
patientName <- str_trim(str_extract_all(raw, "(?<=Nome: ).+(?=Sexo)"), side="both")
examDate <- str_trim(str_extract_all(raw, "(?<=Data da varredura: ).+(?= ID)"))
examScan <- "Composição_Corporal_2_Tabelas"
raw <- map(raw, ~ str_split(.x, "\\n") %>% unlist())
raw <- reduce(raw, c)
raw <- str_replace(raw, "Imagem não destinada a diagnóstico", "")
raw <- str_replace(raw, "318 x 150", "")
table_start <- str_which(raw, "Região")
table_end <- str_which(raw, "Apêndice Massa magra/altura²")
table_end <- table_end[min(which(table_end > table_start))]
table <- raw[(table_start):(table_end)]
table <- str_replace_all(table, "\\s{2,}", "|")
text_con <- textConnection(table)
data_table <- read.csv(text_con, sep = "|")
table_end[min(which(table_end > table_start))]
table_end <- table_end[min(which(table_end > table_start))]
table_start <- str_which(raw, "Região")
table_end <- str_which(raw, "Apêndice Massa magra/altura²")
table_end <- table_end[min(which(table_end > table_start))]
table <- raw[(table_start):(table_end)]
table <- str_replace_all(table, "\\s{2,}", "|")
text_con <- textConnection(table)
data_table <- read.csv(text_con, sep = "|")
data_table <- read.csv(text_con, sep = "|")
text_con
textConnection(table)
table
runApp('navbar-app.r')
shiny::runApp()
?return
list(data_table_1, data_table_2)
runApp()
runApp()
raw <- pdf_text("C:\\Users\\Gabriel\\Desktop\\DXAS\\amanda-comp.pdf")
clean_comp_2(raw)
result <- clean_comp_2(raw)
result[1]
result <- clean_comp_2(raw)[1]
View(result)
View(result[[1]])
runApp()
runApp()
runApp()
runApp()
install.packages('‘shinyShortcut’')
devtools::install_github("ewan-keith/shinyShortcut")
shinyShortcut::shinyShortcut()
